/*
 * Copyright (c) 2017-2019 THL A29 Limited, a Tencent company. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#ifndef TENCENTCLOUD_CWP_V20180228_MODEL_MALWAREWHITELISTINFO_H_
#define TENCENTCLOUD_CWP_V20180228_MODEL_MALWAREWHITELISTINFO_H_

#include <string>
#include <vector>
#include <map>
#include <tencentcloud/core/utils/rapidjson/document.h>
#include <tencentcloud/core/utils/rapidjson/writer.h>
#include <tencentcloud/core/utils/rapidjson/stringbuffer.h>
#include <tencentcloud/core/AbstractModel.h>


namespace TencentCloud
{
    namespace Cwp
    {
        namespace V20180228
        {
            namespace Model
            {
                /**
                * 木马白名单信息
                */
                class MalwareWhiteListInfo : public AbstractModel
                {
                public:
                    MalwareWhiteListInfo();
                    ~MalwareWhiteListInfo() = default;
                    void ToJsonObject(rapidjson::Value &value, rapidjson::Document::AllocatorType& allocator) const;
                    CoreInternalOutcome Deserialize(const rapidjson::Value &value);


                    /**
                     * 获取唯一ID。
                     * @return Id 唯一ID。
                     * 
                     */
                    uint64_t GetId() const;

                    /**
                     * 设置唯一ID。
                     * @param _id 唯一ID。
                     * 
                     */
                    void SetId(const uint64_t& _id);

                    /**
                     * 判断参数 Id 是否已赋值
                     * @return Id 是否已赋值
                     * 
                     */
                    bool IdHasBeenSet() const;

                    /**
                     * 获取cvm quuid 按,分割。
                     * @return QuuidList cvm quuid 按,分割。
                     * 
                     */
                    std::string GetQuuidList() const;

                    /**
                     * 设置cvm quuid 按,分割。
                     * @param _quuidList cvm quuid 按,分割。
                     * 
                     */
                    void SetQuuidList(const std::string& _quuidList);

                    /**
                     * 判断参数 QuuidList 是否已赋值
                     * @return QuuidList 是否已赋值
                     * 
                     */
                    bool QuuidListHasBeenSet() const;

                    /**
                     * 获取md5列表 按,分割
                     * @return Md5List md5列表 按,分割
                     * 
                     */
                    std::string GetMd5List() const;

                    /**
                     * 设置md5列表 按,分割
                     * @param _md5List md5列表 按,分割
                     * 
                     */
                    void SetMd5List(const std::string& _md5List);

                    /**
                     * 判断参数 Md5List 是否已赋值
                     * @return Md5List 是否已赋值
                     * 
                     */
                    bool Md5ListHasBeenSet() const;

                    /**
                     * 获取是否全部主机； 0否，1是
                     * @return IsGlobal 是否全部主机； 0否，1是
                     * 
                     */
                    uint64_t GetIsGlobal() const;

                    /**
                     * 设置是否全部主机； 0否，1是
                     * @param _isGlobal 是否全部主机； 0否，1是
                     * 
                     */
                    void SetIsGlobal(const uint64_t& _isGlobal);

                    /**
                     * 判断参数 IsGlobal 是否已赋值
                     * @return IsGlobal 是否已赋值
                     * 
                     */
                    bool IsGlobalHasBeenSet() const;

                    /**
                     * 获取白名单模式；0 MD5 ，1自定义
                     * @return Mode 白名单模式；0 MD5 ，1自定义
                     * 
                     */
                    uint64_t GetMode() const;

                    /**
                     * 设置白名单模式；0 MD5 ，1自定义
                     * @param _mode 白名单模式；0 MD5 ，1自定义
                     * 
                     */
                    void SetMode(const uint64_t& _mode);

                    /**
                     * 判断参数 Mode 是否已赋值
                     * @return Mode 是否已赋值
                     * 
                     */
                    bool ModeHasBeenSet() const;

                    /**
                     * 获取匹配模式；0精确匹配，1模糊匹配
                     * @return MatchType 匹配模式；0精确匹配，1模糊匹配
                     * 
                     */
                    uint64_t GetMatchType() const;

                    /**
                     * 设置匹配模式；0精确匹配，1模糊匹配
                     * @param _matchType 匹配模式；0精确匹配，1模糊匹配
                     * 
                     */
                    void SetMatchType(const uint64_t& _matchType);

                    /**
                     * 判断参数 MatchType 是否已赋值
                     * @return MatchType 是否已赋值
                     * 
                     */
                    bool MatchTypeHasBeenSet() const;

                    /**
                     * 获取文件名；按,分割
                     * @return FileName 文件名；按,分割
                     * 
                     */
                    std::string GetFileName() const;

                    /**
                     * 设置文件名；按,分割
                     * @param _fileName 文件名；按,分割
                     * 
                     */
                    void SetFileName(const std::string& _fileName);

                    /**
                     * 判断参数 FileName 是否已赋值
                     * @return FileName 是否已赋值
                     * 
                     */
                    bool FileNameHasBeenSet() const;

                    /**
                     * 获取文件目录；按,分割
                     * @return FileDirectory 文件目录；按,分割
                     * 
                     */
                    std::string GetFileDirectory() const;

                    /**
                     * 设置文件目录；按,分割
                     * @param _fileDirectory 文件目录；按,分割
                     * 
                     */
                    void SetFileDirectory(const std::string& _fileDirectory);

                    /**
                     * 判断参数 FileDirectory 是否已赋值
                     * @return FileDirectory 是否已赋值
                     * 
                     */
                    bool FileDirectoryHasBeenSet() const;

                    /**
                     * 获取文件后缀；按,分割
                     * @return FileExtension 文件后缀；按,分割
                     * 
                     */
                    std::string GetFileExtension() const;

                    /**
                     * 设置文件后缀；按,分割
                     * @param _fileExtension 文件后缀；按,分割
                     * 
                     */
                    void SetFileExtension(const std::string& _fileExtension);

                    /**
                     * 判断参数 FileExtension 是否已赋值
                     * @return FileExtension 是否已赋值
                     * 
                     */
                    bool FileExtensionHasBeenSet() const;

                    /**
                     * 获取规则创建时间
                     * @return CreateTime 规则创建时间
                     * 
                     */
                    std::string GetCreateTime() const;

                    /**
                     * 设置规则创建时间
                     * @param _createTime 规则创建时间
                     * 
                     */
                    void SetCreateTime(const std::string& _createTime);

                    /**
                     * 判断参数 CreateTime 是否已赋值
                     * @return CreateTime 是否已赋值
                     * 
                     */
                    bool CreateTimeHasBeenSet() const;

                    /**
                     * 获取受影响记录
                     * @return EventsCount 受影响记录
                     * 
                     */
                    uint64_t GetEventsCount() const;

                    /**
                     * 设置受影响记录
                     * @param _eventsCount 受影响记录
                     * 
                     */
                    void SetEventsCount(const uint64_t& _eventsCount);

                    /**
                     * 判断参数 EventsCount 是否已赋值
                     * @return EventsCount 是否已赋值
                     * 
                     */
                    bool EventsCountHasBeenSet() const;

                    /**
                     * 获取规则修改时间
                     * @return ModifyTime 规则修改时间
                     * 
                     */
                    std::string GetModifyTime() const;

                    /**
                     * 设置规则修改时间
                     * @param _modifyTime 规则修改时间
                     * 
                     */
                    void SetModifyTime(const std::string& _modifyTime);

                    /**
                     * 判断参数 ModifyTime 是否已赋值
                     * @return ModifyTime 是否已赋值
                     * 
                     */
                    bool ModifyTimeHasBeenSet() const;

                private:

                    /**
                     * 唯一ID。
                     */
                    uint64_t m_id;
                    bool m_idHasBeenSet;

                    /**
                     * cvm quuid 按,分割。
                     */
                    std::string m_quuidList;
                    bool m_quuidListHasBeenSet;

                    /**
                     * md5列表 按,分割
                     */
                    std::string m_md5List;
                    bool m_md5ListHasBeenSet;

                    /**
                     * 是否全部主机； 0否，1是
                     */
                    uint64_t m_isGlobal;
                    bool m_isGlobalHasBeenSet;

                    /**
                     * 白名单模式；0 MD5 ，1自定义
                     */
                    uint64_t m_mode;
                    bool m_modeHasBeenSet;

                    /**
                     * 匹配模式；0精确匹配，1模糊匹配
                     */
                    uint64_t m_matchType;
                    bool m_matchTypeHasBeenSet;

                    /**
                     * 文件名；按,分割
                     */
                    std::string m_fileName;
                    bool m_fileNameHasBeenSet;

                    /**
                     * 文件目录；按,分割
                     */
                    std::string m_fileDirectory;
                    bool m_fileDirectoryHasBeenSet;

                    /**
                     * 文件后缀；按,分割
                     */
                    std::string m_fileExtension;
                    bool m_fileExtensionHasBeenSet;

                    /**
                     * 规则创建时间
                     */
                    std::string m_createTime;
                    bool m_createTimeHasBeenSet;

                    /**
                     * 受影响记录
                     */
                    uint64_t m_eventsCount;
                    bool m_eventsCountHasBeenSet;

                    /**
                     * 规则修改时间
                     */
                    std::string m_modifyTime;
                    bool m_modifyTimeHasBeenSet;

                };
            }
        }
    }
}

#endif // !TENCENTCLOUD_CWP_V20180228_MODEL_MALWAREWHITELISTINFO_H_
