/*
 * Copyright (c) 2017-2019 THL A29 Limited, a Tencent company. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#ifndef TENCENTCLOUD_CWP_V20180228_MODEL_MALWAREINFO_H_
#define TENCENTCLOUD_CWP_V20180228_MODEL_MALWAREINFO_H_

#include <string>
#include <vector>
#include <map>
#include <tencentcloud/core/utils/rapidjson/document.h>
#include <tencentcloud/core/utils/rapidjson/writer.h>
#include <tencentcloud/core/utils/rapidjson/stringbuffer.h>
#include <tencentcloud/core/AbstractModel.h>
#include <tencentcloud/cwp/v20180228/model/MachineExtraInfo.h>


namespace TencentCloud
{
    namespace Cwp
    {
        namespace V20180228
        {
            namespace Model
            {
                /**
                * 恶意文件详情
                */
                class MalwareInfo : public AbstractModel
                {
                public:
                    MalwareInfo();
                    ~MalwareInfo() = default;
                    void ToJsonObject(rapidjson::Value &value, rapidjson::Document::AllocatorType& allocator) const;
                    CoreInternalOutcome Deserialize(const rapidjson::Value &value);


                    /**
                     * 获取病毒名称
                     * @return VirusName 病毒名称
                     * 
                     */
                    std::string GetVirusName() const;

                    /**
                     * 设置病毒名称
                     * @param _virusName 病毒名称
                     * 
                     */
                    void SetVirusName(const std::string& _virusName);

                    /**
                     * 判断参数 VirusName 是否已赋值
                     * @return VirusName 是否已赋值
                     * 
                     */
                    bool VirusNameHasBeenSet() const;

                    /**
                     * 获取文件大小
                     * @return FileSize 文件大小
                     * 
                     */
                    int64_t GetFileSize() const;

                    /**
                     * 设置文件大小
                     * @param _fileSize 文件大小
                     * 
                     */
                    void SetFileSize(const int64_t& _fileSize);

                    /**
                     * 判断参数 FileSize 是否已赋值
                     * @return FileSize 是否已赋值
                     * 
                     */
                    bool FileSizeHasBeenSet() const;

                    /**
                     * 获取文件MD5
                     * @return MD5 文件MD5
                     * 
                     */
                    std::string GetMD5() const;

                    /**
                     * 设置文件MD5
                     * @param _mD5 文件MD5
                     * 
                     */
                    void SetMD5(const std::string& _mD5);

                    /**
                     * 判断参数 MD5 是否已赋值
                     * @return MD5 是否已赋值
                     * 
                     */
                    bool MD5HasBeenSet() const;

                    /**
                     * 获取文件地址
                     * @return FilePath 文件地址
                     * 
                     */
                    std::string GetFilePath() const;

                    /**
                     * 设置文件地址
                     * @param _filePath 文件地址
                     * 
                     */
                    void SetFilePath(const std::string& _filePath);

                    /**
                     * 判断参数 FilePath 是否已赋值
                     * @return FilePath 是否已赋值
                     * 
                     */
                    bool FilePathHasBeenSet() const;

                    /**
                     * 获取首次运行时间
                     * @return FileCreateTime 首次运行时间
                     * 
                     */
                    std::string GetFileCreateTime() const;

                    /**
                     * 设置首次运行时间
                     * @param _fileCreateTime 首次运行时间
                     * 
                     */
                    void SetFileCreateTime(const std::string& _fileCreateTime);

                    /**
                     * 判断参数 FileCreateTime 是否已赋值
                     * @return FileCreateTime 是否已赋值
                     * 
                     */
                    bool FileCreateTimeHasBeenSet() const;

                    /**
                     * 获取最近一次运行时间
                     * @return FileModifierTime 最近一次运行时间
                     * 
                     */
                    std::string GetFileModifierTime() const;

                    /**
                     * 设置最近一次运行时间
                     * @param _fileModifierTime 最近一次运行时间
                     * 
                     */
                    void SetFileModifierTime(const std::string& _fileModifierTime);

                    /**
                     * 判断参数 FileModifierTime 是否已赋值
                     * @return FileModifierTime 是否已赋值
                     * 
                     */
                    bool FileModifierTimeHasBeenSet() const;

                    /**
                     * 获取危害描述
                     * @return HarmDescribe 危害描述
                     * 
                     */
                    std::string GetHarmDescribe() const;

                    /**
                     * 设置危害描述
                     * @param _harmDescribe 危害描述
                     * 
                     */
                    void SetHarmDescribe(const std::string& _harmDescribe);

                    /**
                     * 判断参数 HarmDescribe 是否已赋值
                     * @return HarmDescribe 是否已赋值
                     * 
                     */
                    bool HarmDescribeHasBeenSet() const;

                    /**
                     * 获取建议方案
                     * @return SuggestScheme 建议方案
                     * 
                     */
                    std::string GetSuggestScheme() const;

                    /**
                     * 设置建议方案
                     * @param _suggestScheme 建议方案
                     * 
                     */
                    void SetSuggestScheme(const std::string& _suggestScheme);

                    /**
                     * 判断参数 SuggestScheme 是否已赋值
                     * @return SuggestScheme 是否已赋值
                     * 
                     */
                    bool SuggestSchemeHasBeenSet() const;

                    /**
                     * 获取服务器名称
                     * @return ServersName 服务器名称
                     * 
                     */
                    std::string GetServersName() const;

                    /**
                     * 设置服务器名称
                     * @param _serversName 服务器名称
                     * 
                     */
                    void SetServersName(const std::string& _serversName);

                    /**
                     * 判断参数 ServersName 是否已赋值
                     * @return ServersName 是否已赋值
                     * 
                     */
                    bool ServersNameHasBeenSet() const;

                    /**
                     * 获取服务器IP
                     * @return HostIp 服务器IP
                     * 
                     */
                    std::string GetHostIp() const;

                    /**
                     * 设置服务器IP
                     * @param _hostIp 服务器IP
                     * 
                     */
                    void SetHostIp(const std::string& _hostIp);

                    /**
                     * 判断参数 HostIp 是否已赋值
                     * @return HostIp 是否已赋值
                     * 
                     */
                    bool HostIpHasBeenSet() const;

                    /**
                     * 获取进程名称
                     * @return ProcessName 进程名称
                     * 
                     */
                    std::string GetProcessName() const;

                    /**
                     * 设置进程名称
                     * @param _processName 进程名称
                     * 
                     */
                    void SetProcessName(const std::string& _processName);

                    /**
                     * 判断参数 ProcessName 是否已赋值
                     * @return ProcessName 是否已赋值
                     * 
                     */
                    bool ProcessNameHasBeenSet() const;

                    /**
                     * 获取进程ID
                     * @return ProcessID 进程ID
                     * 
                     */
                    std::string GetProcessID() const;

                    /**
                     * 设置进程ID
                     * @param _processID 进程ID
                     * 
                     */
                    void SetProcessID(const std::string& _processID);

                    /**
                     * 判断参数 ProcessID 是否已赋值
                     * @return ProcessID 是否已赋值
                     * 
                     */
                    bool ProcessIDHasBeenSet() const;

                    /**
                     * 获取标签特性
                     * @return Tags 标签特性
                     * 
                     */
                    std::vector<std::string> GetTags() const;

                    /**
                     * 设置标签特性
                     * @param _tags 标签特性
                     * 
                     */
                    void SetTags(const std::vector<std::string>& _tags);

                    /**
                     * 判断参数 Tags 是否已赋值
                     * @return Tags 是否已赋值
                     * 
                     */
                    bool TagsHasBeenSet() const;

                    /**
                     * 获取影响广度 // 暂时不提供
                     * @return Breadth 影响广度 // 暂时不提供
                     * 
                     */
                    std::string GetBreadth() const;

                    /**
                     * 设置影响广度 // 暂时不提供
                     * @param _breadth 影响广度 // 暂时不提供
                     * 
                     */
                    void SetBreadth(const std::string& _breadth);

                    /**
                     * 判断参数 Breadth 是否已赋值
                     * @return Breadth 是否已赋值
                     * 
                     */
                    bool BreadthHasBeenSet() const;

                    /**
                     * 获取查询热度 // 暂时不提供
                     * @return Heat 查询热度 // 暂时不提供
                     * 
                     */
                    std::string GetHeat() const;

                    /**
                     * 设置查询热度 // 暂时不提供
                     * @param _heat 查询热度 // 暂时不提供
                     * 
                     */
                    void SetHeat(const std::string& _heat);

                    /**
                     * 判断参数 Heat 是否已赋值
                     * @return Heat 是否已赋值
                     * 
                     */
                    bool HeatHasBeenSet() const;

                    /**
                     * 获取唯一ID
                     * @return Id 唯一ID
                     * 
                     */
                    uint64_t GetId() const;

                    /**
                     * 设置唯一ID
                     * @param _id 唯一ID
                     * 
                     */
                    void SetId(const uint64_t& _id);

                    /**
                     * 判断参数 Id 是否已赋值
                     * @return Id 是否已赋值
                     * 
                     */
                    bool IdHasBeenSet() const;

                    /**
                     * 获取文件名称
                     * @return FileName 文件名称
                     * 
                     */
                    std::string GetFileName() const;

                    /**
                     * 设置文件名称
                     * @param _fileName 文件名称
                     * 
                     */
                    void SetFileName(const std::string& _fileName);

                    /**
                     * 判断参数 FileName 是否已赋值
                     * @return FileName 是否已赋值
                     * 
                     */
                    bool FileNameHasBeenSet() const;

                    /**
                     * 获取首次发现时间
                     * @return CreateTime 首次发现时间
                     * 
                     */
                    std::string GetCreateTime() const;

                    /**
                     * 设置首次发现时间
                     * @param _createTime 首次发现时间
                     * 
                     */
                    void SetCreateTime(const std::string& _createTime);

                    /**
                     * 判断参数 CreateTime 是否已赋值
                     * @return CreateTime 是否已赋值
                     * 
                     */
                    bool CreateTimeHasBeenSet() const;

                    /**
                     * 获取最近扫描时间
                     * @return LatestScanTime 最近扫描时间
                     * 
                     */
                    std::string GetLatestScanTime() const;

                    /**
                     * 设置最近扫描时间
                     * @param _latestScanTime 最近扫描时间
                     * 
                     */
                    void SetLatestScanTime(const std::string& _latestScanTime);

                    /**
                     * 判断参数 LatestScanTime 是否已赋值
                     * @return LatestScanTime 是否已赋值
                     * 
                     */
                    bool LatestScanTimeHasBeenSet() const;

                    /**
                     * 获取参考链接
                     * @return Reference 参考链接
                     * 
                     */
                    std::string GetReference() const;

                    /**
                     * 设置参考链接
                     * @param _reference 参考链接
                     * 
                     */
                    void SetReference(const std::string& _reference);

                    /**
                     * 判断参数 Reference 是否已赋值
                     * @return Reference 是否已赋值
                     * 
                     */
                    bool ReferenceHasBeenSet() const;

                    /**
                     * 获取外网ip
                     * @return MachineWanIp 外网ip
                     * 
                     */
                    std::string GetMachineWanIp() const;

                    /**
                     * 设置外网ip
                     * @param _machineWanIp 外网ip
                     * 
                     */
                    void SetMachineWanIp(const std::string& _machineWanIp);

                    /**
                     * 判断参数 MachineWanIp 是否已赋值
                     * @return MachineWanIp 是否已赋值
                     * 
                     */
                    bool MachineWanIpHasBeenSet() const;

                    /**
                     * 获取进程树 json  pid:进程id，exe:文件路径 ，account:进程所属用组和用户 ,cmdline:执行命令，ssh_service: SSH服务ip, ssh_soure:登录源
                     * @return PsTree 进程树 json  pid:进程id，exe:文件路径 ，account:进程所属用组和用户 ,cmdline:执行命令，ssh_service: SSH服务ip, ssh_soure:登录源
                     * 
                     */
                    std::string GetPsTree() const;

                    /**
                     * 设置进程树 json  pid:进程id，exe:文件路径 ，account:进程所属用组和用户 ,cmdline:执行命令，ssh_service: SSH服务ip, ssh_soure:登录源
                     * @param _psTree 进程树 json  pid:进程id，exe:文件路径 ，account:进程所属用组和用户 ,cmdline:执行命令，ssh_service: SSH服务ip, ssh_soure:登录源
                     * 
                     */
                    void SetPsTree(const std::string& _psTree);

                    /**
                     * 判断参数 PsTree 是否已赋值
                     * @return PsTree 是否已赋值
                     * 
                     */
                    bool PsTreeHasBeenSet() const;

                    /**
                     * 获取主机在线状态 OFFLINE  ONLINE
                     * @return MachineStatus 主机在线状态 OFFLINE  ONLINE
                     * 
                     */
                    std::string GetMachineStatus() const;

                    /**
                     * 设置主机在线状态 OFFLINE  ONLINE
                     * @param _machineStatus 主机在线状态 OFFLINE  ONLINE
                     * 
                     */
                    void SetMachineStatus(const std::string& _machineStatus);

                    /**
                     * 判断参数 MachineStatus 是否已赋值
                     * @return MachineStatus 是否已赋值
                     * 
                     */
                    bool MachineStatusHasBeenSet() const;

                    /**
                     * 获取状态；4-:待处理，5-已信任，6-已隔离
                     * @return Status 状态；4-:待处理，5-已信任，6-已隔离
                     * 
                     */
                    uint64_t GetStatus() const;

                    /**
                     * 设置状态；4-:待处理，5-已信任，6-已隔离
                     * @param _status 状态；4-:待处理，5-已信任，6-已隔离
                     * 
                     */
                    void SetStatus(const uint64_t& _status);

                    /**
                     * 判断参数 Status 是否已赋值
                     * @return Status 是否已赋值
                     * 
                     */
                    bool StatusHasBeenSet() const;

                    /**
                     * 获取风险等级 0提示、1低、2中、3高、4严重
                     * @return Level 风险等级 0提示、1低、2中、3高、4严重
                     * 
                     */
                    uint64_t GetLevel() const;

                    /**
                     * 设置风险等级 0提示、1低、2中、3高、4严重
                     * @param _level 风险等级 0提示、1低、2中、3高、4严重
                     * 
                     */
                    void SetLevel(const uint64_t& _level);

                    /**
                     * 判断参数 Level 是否已赋值
                     * @return Level 是否已赋值
                     * 
                     */
                    bool LevelHasBeenSet() const;

                    /**
                     * 获取木马检测平台用,分割 1云查杀引擎、2TAV、3binaryAi、4异常行为、5威胁情报
                     * @return CheckPlatform 木马检测平台用,分割 1云查杀引擎、2TAV、3binaryAi、4异常行为、5威胁情报
                     * 
                     */
                    std::string GetCheckPlatform() const;

                    /**
                     * 设置木马检测平台用,分割 1云查杀引擎、2TAV、3binaryAi、4异常行为、5威胁情报
                     * @param _checkPlatform 木马检测平台用,分割 1云查杀引擎、2TAV、3binaryAi、4异常行为、5威胁情报
                     * 
                     */
                    void SetCheckPlatform(const std::string& _checkPlatform);

                    /**
                     * 判断参数 CheckPlatform 是否已赋值
                     * @return CheckPlatform 是否已赋值
                     * 
                     */
                    bool CheckPlatformHasBeenSet() const;

                    /**
                     * 获取主机uuid
                     * @return Uuid 主机uuid
                     * 
                     */
                    std::string GetUuid() const;

                    /**
                     * 设置主机uuid
                     * @param _uuid 主机uuid
                     * 
                     */
                    void SetUuid(const std::string& _uuid);

                    /**
                     * 判断参数 Uuid 是否已赋值
                     * @return Uuid 是否已赋值
                     * 
                     */
                    bool UuidHasBeenSet() const;

                    /**
                     * 获取最近修改时间
                     * @return ModifyTime 最近修改时间
                     * 
                     */
                    std::string GetModifyTime() const;

                    /**
                     * 设置最近修改时间
                     * @param _modifyTime 最近修改时间
                     * 
                     */
                    void SetModifyTime(const std::string& _modifyTime);

                    /**
                     * 判断参数 ModifyTime 是否已赋值
                     * @return ModifyTime 是否已赋值
                     * 
                     */
                    bool ModifyTimeHasBeenSet() const;

                    /**
                     * 获取最近访问时间
                     * @return StrFileAccessTime 最近访问时间
                     * 
                     */
                    std::string GetStrFileAccessTime() const;

                    /**
                     * 设置最近访问时间
                     * @param _strFileAccessTime 最近访问时间
                     * 
                     */
                    void SetStrFileAccessTime(const std::string& _strFileAccessTime);

                    /**
                     * 判断参数 StrFileAccessTime 是否已赋值
                     * @return StrFileAccessTime 是否已赋值
                     * 
                     */
                    bool StrFileAccessTimeHasBeenSet() const;

                    /**
                     * 获取附加信息
                     * @return MachineExtraInfo 附加信息
                     * 
                     */
                    MachineExtraInfo GetMachineExtraInfo() const;

                    /**
                     * 设置附加信息
                     * @param _machineExtraInfo 附加信息
                     * 
                     */
                    void SetMachineExtraInfo(const MachineExtraInfo& _machineExtraInfo);

                    /**
                     * 判断参数 MachineExtraInfo 是否已赋值
                     * @return MachineExtraInfo 是否已赋值
                     * 
                     */
                    bool MachineExtraInfoHasBeenSet() const;

                    /**
                     * 获取参考链接
                     * @return References 参考链接
                     * 
                     */
                    std::vector<std::string> GetReferences() const;

                    /**
                     * 设置参考链接
                     * @param _references 参考链接
                     * 
                     */
                    void SetReferences(const std::vector<std::string>& _references);

                    /**
                     * 判断参数 References 是否已赋值
                     * @return References 是否已赋值
                     * 
                     */
                    bool ReferencesHasBeenSet() const;

                    /**
                     * 获取木马文件是否存在
                     * @return FileExists 木马文件是否存在
                     * 
                     */
                    bool GetFileExists() const;

                    /**
                     * 设置木马文件是否存在
                     * @param _fileExists 木马文件是否存在
                     * 
                     */
                    void SetFileExists(const bool& _fileExists);

                    /**
                     * 判断参数 FileExists 是否已赋值
                     * @return FileExists 是否已赋值
                     * 
                     */
                    bool FileExistsHasBeenSet() const;

                    /**
                     * 获取木马进程是否存在
                     * @return ProcessExists 木马进程是否存在
                     * 
                     */
                    bool GetProcessExists() const;

                    /**
                     * 设置木马进程是否存在
                     * @param _processExists 木马进程是否存在
                     * 
                     */
                    void SetProcessExists(const bool& _processExists);

                    /**
                     * 判断参数 ProcessExists 是否已赋值
                     * @return ProcessExists 是否已赋值
                     * 
                     */
                    bool ProcessExistsHasBeenSet() const;

                private:

                    /**
                     * 病毒名称
                     */
                    std::string m_virusName;
                    bool m_virusNameHasBeenSet;

                    /**
                     * 文件大小
                     */
                    int64_t m_fileSize;
                    bool m_fileSizeHasBeenSet;

                    /**
                     * 文件MD5
                     */
                    std::string m_mD5;
                    bool m_mD5HasBeenSet;

                    /**
                     * 文件地址
                     */
                    std::string m_filePath;
                    bool m_filePathHasBeenSet;

                    /**
                     * 首次运行时间
                     */
                    std::string m_fileCreateTime;
                    bool m_fileCreateTimeHasBeenSet;

                    /**
                     * 最近一次运行时间
                     */
                    std::string m_fileModifierTime;
                    bool m_fileModifierTimeHasBeenSet;

                    /**
                     * 危害描述
                     */
                    std::string m_harmDescribe;
                    bool m_harmDescribeHasBeenSet;

                    /**
                     * 建议方案
                     */
                    std::string m_suggestScheme;
                    bool m_suggestSchemeHasBeenSet;

                    /**
                     * 服务器名称
                     */
                    std::string m_serversName;
                    bool m_serversNameHasBeenSet;

                    /**
                     * 服务器IP
                     */
                    std::string m_hostIp;
                    bool m_hostIpHasBeenSet;

                    /**
                     * 进程名称
                     */
                    std::string m_processName;
                    bool m_processNameHasBeenSet;

                    /**
                     * 进程ID
                     */
                    std::string m_processID;
                    bool m_processIDHasBeenSet;

                    /**
                     * 标签特性
                     */
                    std::vector<std::string> m_tags;
                    bool m_tagsHasBeenSet;

                    /**
                     * 影响广度 // 暂时不提供
                     */
                    std::string m_breadth;
                    bool m_breadthHasBeenSet;

                    /**
                     * 查询热度 // 暂时不提供
                     */
                    std::string m_heat;
                    bool m_heatHasBeenSet;

                    /**
                     * 唯一ID
                     */
                    uint64_t m_id;
                    bool m_idHasBeenSet;

                    /**
                     * 文件名称
                     */
                    std::string m_fileName;
                    bool m_fileNameHasBeenSet;

                    /**
                     * 首次发现时间
                     */
                    std::string m_createTime;
                    bool m_createTimeHasBeenSet;

                    /**
                     * 最近扫描时间
                     */
                    std::string m_latestScanTime;
                    bool m_latestScanTimeHasBeenSet;

                    /**
                     * 参考链接
                     */
                    std::string m_reference;
                    bool m_referenceHasBeenSet;

                    /**
                     * 外网ip
                     */
                    std::string m_machineWanIp;
                    bool m_machineWanIpHasBeenSet;

                    /**
                     * 进程树 json  pid:进程id，exe:文件路径 ，account:进程所属用组和用户 ,cmdline:执行命令，ssh_service: SSH服务ip, ssh_soure:登录源
                     */
                    std::string m_psTree;
                    bool m_psTreeHasBeenSet;

                    /**
                     * 主机在线状态 OFFLINE  ONLINE
                     */
                    std::string m_machineStatus;
                    bool m_machineStatusHasBeenSet;

                    /**
                     * 状态；4-:待处理，5-已信任，6-已隔离
                     */
                    uint64_t m_status;
                    bool m_statusHasBeenSet;

                    /**
                     * 风险等级 0提示、1低、2中、3高、4严重
                     */
                    uint64_t m_level;
                    bool m_levelHasBeenSet;

                    /**
                     * 木马检测平台用,分割 1云查杀引擎、2TAV、3binaryAi、4异常行为、5威胁情报
                     */
                    std::string m_checkPlatform;
                    bool m_checkPlatformHasBeenSet;

                    /**
                     * 主机uuid
                     */
                    std::string m_uuid;
                    bool m_uuidHasBeenSet;

                    /**
                     * 最近修改时间
                     */
                    std::string m_modifyTime;
                    bool m_modifyTimeHasBeenSet;

                    /**
                     * 最近访问时间
                     */
                    std::string m_strFileAccessTime;
                    bool m_strFileAccessTimeHasBeenSet;

                    /**
                     * 附加信息
                     */
                    MachineExtraInfo m_machineExtraInfo;
                    bool m_machineExtraInfoHasBeenSet;

                    /**
                     * 参考链接
                     */
                    std::vector<std::string> m_references;
                    bool m_referencesHasBeenSet;

                    /**
                     * 木马文件是否存在
                     */
                    bool m_fileExists;
                    bool m_fileExistsHasBeenSet;

                    /**
                     * 木马进程是否存在
                     */
                    bool m_processExists;
                    bool m_processExistsHasBeenSet;

                };
            }
        }
    }
}

#endif // !TENCENTCLOUD_CWP_V20180228_MODEL_MALWAREINFO_H_
