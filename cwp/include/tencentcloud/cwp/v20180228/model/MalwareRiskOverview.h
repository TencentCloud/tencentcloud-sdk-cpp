/*
 * Copyright (c) 2017-2019 THL A29 Limited, a Tencent company. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#ifndef TENCENTCLOUD_CWP_V20180228_MODEL_MALWARERISKOVERVIEW_H_
#define TENCENTCLOUD_CWP_V20180228_MODEL_MALWARERISKOVERVIEW_H_

#include <string>
#include <vector>
#include <map>
#include <tencentcloud/core/utils/rapidjson/document.h>
#include <tencentcloud/core/utils/rapidjson/writer.h>
#include <tencentcloud/core/utils/rapidjson/stringbuffer.h>
#include <tencentcloud/core/AbstractModel.h>


namespace TencentCloud
{
    namespace Cwp
    {
        namespace V20180228
        {
            namespace Model
            {
                /**
                * 文件查杀概览信息
                */
                class MalwareRiskOverview : public AbstractModel
                {
                public:
                    MalwareRiskOverview();
                    ~MalwareRiskOverview() = default;
                    void ToJsonObject(rapidjson::Value &value, rapidjson::Document::AllocatorType& allocator) const;
                    CoreInternalOutcome Deserialize(const rapidjson::Value &value);


                    /**
                     * 获取影响主机数
                     * @return HostCount 影响主机数
                     * 
                     */
                    int64_t GetHostCount() const;

                    /**
                     * 设置影响主机数
                     * @param _hostCount 影响主机数
                     * 
                     */
                    void SetHostCount(const int64_t& _hostCount);

                    /**
                     * 判断参数 HostCount 是否已赋值
                     * @return HostCount 是否已赋值
                     * 
                     */
                    bool HostCountHasBeenSet() const;

                    /**
                     * 获取异常进程数
                     * @return ProcessCount 异常进程数
                     * 
                     */
                    int64_t GetProcessCount() const;

                    /**
                     * 设置异常进程数
                     * @param _processCount 异常进程数
                     * 
                     */
                    void SetProcessCount(const int64_t& _processCount);

                    /**
                     * 判断参数 ProcessCount 是否已赋值
                     * @return ProcessCount 是否已赋值
                     * 
                     */
                    bool ProcessCountHasBeenSet() const;

                    /**
                     * 获取恶意文件数
                     * @return FileCount 恶意文件数
                     * 
                     */
                    int64_t GetFileCount() const;

                    /**
                     * 设置恶意文件数
                     * @param _fileCount 恶意文件数
                     * 
                     */
                    void SetFileCount(const int64_t& _fileCount);

                    /**
                     * 判断参数 FileCount 是否已赋值
                     * @return FileCount 是否已赋值
                     * 
                     */
                    bool FileCountHasBeenSet() const;

                    /**
                     * 获取是否首次扫描[false:否|true:是]
                     * @return IsFirstScan 是否首次扫描[false:否|true:是]
                     * 
                     */
                    bool GetIsFirstScan() const;

                    /**
                     * 设置是否首次扫描[false:否|true:是]
                     * @param _isFirstScan 是否首次扫描[false:否|true:是]
                     * 
                     */
                    void SetIsFirstScan(const bool& _isFirstScan);

                    /**
                     * 判断参数 IsFirstScan 是否已赋值
                     * @return IsFirstScan 是否已赋值
                     * 
                     */
                    bool IsFirstScanHasBeenSet() const;

                    /**
                     * 获取最后扫描时间
                     * @return ScanTime 最后扫描时间
                     * 
                     */
                    std::string GetScanTime() const;

                    /**
                     * 设置最后扫描时间
                     * @param _scanTime 最后扫描时间
                     * 
                     */
                    void SetScanTime(const std::string& _scanTime);

                    /**
                     * 判断参数 ScanTime 是否已赋值
                     * @return ScanTime 是否已赋值
                     * 
                     */
                    bool ScanTimeHasBeenSet() const;

                private:

                    /**
                     * 影响主机数
                     */
                    int64_t m_hostCount;
                    bool m_hostCountHasBeenSet;

                    /**
                     * 异常进程数
                     */
                    int64_t m_processCount;
                    bool m_processCountHasBeenSet;

                    /**
                     * 恶意文件数
                     */
                    int64_t m_fileCount;
                    bool m_fileCountHasBeenSet;

                    /**
                     * 是否首次扫描[false:否|true:是]
                     */
                    bool m_isFirstScan;
                    bool m_isFirstScanHasBeenSet;

                    /**
                     * 最后扫描时间
                     */
                    std::string m_scanTime;
                    bool m_scanTimeHasBeenSet;

                };
            }
        }
    }
}

#endif // !TENCENTCLOUD_CWP_V20180228_MODEL_MALWARERISKOVERVIEW_H_
