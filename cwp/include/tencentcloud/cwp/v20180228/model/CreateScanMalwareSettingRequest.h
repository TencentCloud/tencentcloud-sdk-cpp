/*
 * Copyright (c) 2017-2025 Tencent. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#ifndef TENCENTCLOUD_CWP_V20180228_MODEL_CREATESCANMALWARESETTINGREQUEST_H_
#define TENCENTCLOUD_CWP_V20180228_MODEL_CREATESCANMALWARESETTINGREQUEST_H_

#include <string>
#include <vector>
#include <map>
#include <tencentcloud/core/AbstractModel.h>


namespace TencentCloud
{
    namespace Cwp
    {
        namespace V20180228
        {
            namespace Model
            {
                /**
                * CreateScanMalwareSetting请求参数结构体
                */
                class CreateScanMalwareSettingRequest : public AbstractModel
                {
                public:
                    CreateScanMalwareSettingRequest();
                    ~CreateScanMalwareSettingRequest() = default;
                    std::string ToJsonString() const;


                    /**
                     * 获取扫描模式 0 全盘扫描, 1 快速扫描
                     * @return ScanPattern 扫描模式 0 全盘扫描, 1 快速扫描
                     * 
                     */
                    uint64_t GetScanPattern() const;

                    /**
                     * 设置扫描模式 0 全盘扫描, 1 快速扫描
                     * @param _scanPattern 扫描模式 0 全盘扫描, 1 快速扫描
                     * 
                     */
                    void SetScanPattern(const uint64_t& _scanPattern);

                    /**
                     * 判断参数 ScanPattern 是否已赋值
                     * @return ScanPattern 是否已赋值
                     * 
                     */
                    bool ScanPatternHasBeenSet() const;

                    /**
                     * 获取服务器分类：1:专业版服务器；2:自选服务器
                     * @return HostType 服务器分类：1:专业版服务器；2:自选服务器
                     * 
                     */
                    int64_t GetHostType() const;

                    /**
                     * 设置服务器分类：1:专业版服务器；2:自选服务器
                     * @param _hostType 服务器分类：1:专业版服务器；2:自选服务器
                     * 
                     */
                    void SetHostType(const int64_t& _hostType);

                    /**
                     * 判断参数 HostType 是否已赋值
                     * @return HostType 是否已赋值
                     * 
                     */
                    bool HostTypeHasBeenSet() const;

                    /**
                     * 获取自选服务器时生效，主机quuid的string数组
                     * @return QuuidList 自选服务器时生效，主机quuid的string数组
                     * 
                     */
                    std::vector<std::string> GetQuuidList() const;

                    /**
                     * 设置自选服务器时生效，主机quuid的string数组
                     * @param _quuidList 自选服务器时生效，主机quuid的string数组
                     * 
                     */
                    void SetQuuidList(const std::vector<std::string>& _quuidList);

                    /**
                     * 判断参数 QuuidList 是否已赋值
                     * @return QuuidList 是否已赋值
                     * 
                     */
                    bool QuuidListHasBeenSet() const;

                    /**
                     * 获取超时时间单位 秒 默认3600 秒
                     * @return TimeoutPeriod 超时时间单位 秒 默认3600 秒
                     * 
                     */
                    uint64_t GetTimeoutPeriod() const;

                    /**
                     * 设置超时时间单位 秒 默认3600 秒
                     * @param _timeoutPeriod 超时时间单位 秒 默认3600 秒
                     * 
                     */
                    void SetTimeoutPeriod(const uint64_t& _timeoutPeriod);

                    /**
                     * 判断参数 TimeoutPeriod 是否已赋值
                     * @return TimeoutPeriod 是否已赋值
                     * 
                     */
                    bool TimeoutPeriodHasBeenSet() const;

                    /**
                     * 获取1标准模式（只报严重、高危）、2增强模式（报严重、高危、中危）、3严格模式（报严重、高、中、低、提示）
                     * @return EngineType 1标准模式（只报严重、高危）、2增强模式（报严重、高危、中危）、3严格模式（报严重、高、中、低、提示）
                     * 
                     */
                    uint64_t GetEngineType() const;

                    /**
                     * 设置1标准模式（只报严重、高危）、2增强模式（报严重、高危、中危）、3严格模式（报严重、高、中、低、提示）
                     * @param _engineType 1标准模式（只报严重、高危）、2增强模式（报严重、高危、中危）、3严格模式（报严重、高、中、低、提示）
                     * 
                     */
                    void SetEngineType(const uint64_t& _engineType);

                    /**
                     * 判断参数 EngineType 是否已赋值
                     * @return EngineType 是否已赋值
                     * 
                     */
                    bool EngineTypeHasBeenSet() const;

                    /**
                     * 获取是否开启恶意进程查杀[0:未开启,1:开启]
                     * @return EnableMemShellScan 是否开启恶意进程查杀[0:未开启,1:开启]
                     * 
                     */
                    int64_t GetEnableMemShellScan() const;

                    /**
                     * 设置是否开启恶意进程查杀[0:未开启,1:开启]
                     * @param _enableMemShellScan 是否开启恶意进程查杀[0:未开启,1:开启]
                     * 
                     */
                    void SetEnableMemShellScan(const int64_t& _enableMemShellScan);

                    /**
                     * 判断参数 EnableMemShellScan 是否已赋值
                     * @return EnableMemShellScan 是否已赋值
                     * 
                     */
                    bool EnableMemShellScanHasBeenSet() const;

                private:

                    /**
                     * 扫描模式 0 全盘扫描, 1 快速扫描
                     */
                    uint64_t m_scanPattern;
                    bool m_scanPatternHasBeenSet;

                    /**
                     * 服务器分类：1:专业版服务器；2:自选服务器
                     */
                    int64_t m_hostType;
                    bool m_hostTypeHasBeenSet;

                    /**
                     * 自选服务器时生效，主机quuid的string数组
                     */
                    std::vector<std::string> m_quuidList;
                    bool m_quuidListHasBeenSet;

                    /**
                     * 超时时间单位 秒 默认3600 秒
                     */
                    uint64_t m_timeoutPeriod;
                    bool m_timeoutPeriodHasBeenSet;

                    /**
                     * 1标准模式（只报严重、高危）、2增强模式（报严重、高危、中危）、3严格模式（报严重、高、中、低、提示）
                     */
                    uint64_t m_engineType;
                    bool m_engineTypeHasBeenSet;

                    /**
                     * 是否开启恶意进程查杀[0:未开启,1:开启]
                     */
                    int64_t m_enableMemShellScan;
                    bool m_enableMemShellScanHasBeenSet;

                };
            }
        }
    }
}

#endif // !TENCENTCLOUD_CWP_V20180228_MODEL_CREATESCANMALWARESETTINGREQUEST_H_
